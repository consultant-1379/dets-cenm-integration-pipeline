import java.io.File

String pipeline_name
String projectsCommonFile = readFileFromWorkspace('Jenkins/MTE_install_Jobs')
projectsCommonFile.eachLine {
    project_name -> createPipelineBuildJob(project_name)
}

def createPipelineBuildJob(project_name) {
    pipelineJob(project_name) {
        description ('ENM Cloud Native Upgrade Build pipeline ' + project_name + ' - autogenerated using JobDSL - all manual changes will be overwritten!')
        concurrentBuild(allowConcurrentBuild = true)
        logRotator {
            numToKeep(30)
        }
        parameters {
            choiceParam('deployment_mechanism',['charts','csar'],'This parameter acts as the flow controller to select the deployment mechanism either charts or csar.')
            stringParam('environment_name', '','The deployment name to run the job against')
            choiceParam('stage_area',['ci_internal','drop'],'This parameter acts as the flow controller to download charts from internal area or release area')
            stringParam('product_set_version', '','Provide clould native product set version')
            stringParam('drop', '','provide the drop version')
            choiceParam('integration_value_type',['eric-enm-integration-production-values', 'eric-enm-integration-extra-large-production-values', 'eric-enm-multi-instance-functional-integration-values', 'eric-enm-single-instance-production-integration-values' , 'eric-enm-integration-functional-test-values', 'eric-enm-integration-openstack-core-values'],'Select the type of integration values type to be used. <br><br>NOTE : CSAR supports only eric-enm-integration-production-values and eric-enm-integration-extra-large-production-values.<br> If you choose deployment mechanism as CSAR please select the value as eric-enm-integration-production-values or eric-enm-integration-extra-large-production-values only.')
            labelParam('slave') {
               defaultValue("${SLAVE}")
               description('')
            }
        }

        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            credentials('lciadm100_private_key')
                            url("${GERRIT_MIRROR}/OSS/com.ericsson.oss.containerisation/eric-enm-integration-pipeline-code")
                        }
                        extensions {
                             cleanBeforeCheckout()
                        }
                    }
                }
                scriptPath("Jenkins/Jenkinsfile/JenkinsfileInstall")
                lightweight(lightweight = true)
            }
        }
    }
}
